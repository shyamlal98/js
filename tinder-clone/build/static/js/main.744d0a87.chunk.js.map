{"version":3,"sources":["Header.js","axios.js","TinderCards.js","SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","timeout","headers","TinderCards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","console","log","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAuBeA,MAjBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,kBAG3C,qBAAKA,UAAU,cAAcG,IAA8B,cAAeC,IAAI,gBAE9E,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,sB,kECVvCK,E,OALEC,EAAMC,OAAO,CAC1BC,QAAS,wBACTC,QAAS,IACTC,QAAS,CAAC,kBAAmB,kBC0ClBC,MAzCf,WACI,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,qBAAU,WAAI,4CACT,4BAAAC,EAAA,sEACsBV,EAAMW,IAAI,iBADhC,OACUC,EADV,OAEIJ,EAAUI,EAAIC,MAFlB,4CADS,uBAAC,WAAD,wBAKTC,KACH,IACFC,QAAQC,IAAIT,GAaR,qBAAKb,UAAU,cAAf,SACI,qBAAKA,UAAU,4BAAf,SACMa,EAAOU,KAAK,SAACC,GAAD,OACV,cAAC,IAAD,CACCxB,UAAU,QAEVyB,aAAc,CAAC,KAAK,QACpBC,QAAS,SAACC,GAAD,OAlBAC,EAkBoBJ,EAAOK,UAhBjDR,QAAQC,IAAI,YAAYM,GAFb,IAAWA,GAmBTE,iBAAoB,kBAdjBD,EAckCL,EAAOK,UAbzDR,QAAQC,IAAKO,EAAO,sBADL,IAACA,GASJ,SAOI,qBAAKE,MAAO,CAACC,gBAAgB,OAAD,OAAQR,EAAOS,OAAf,MAA2BjC,UAAU,OAAjE,SACG,6BAAKwB,EAAOK,UANbL,EAAOK,c,6FCHlBK,MAtBf,WACI,OACI,sBAAKlC,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,oBAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YAExB,cAACD,EAAA,EAAD,CAAYD,UAAU,oBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,yBAAtB,SACI,cAAC,IAAD,CAAaE,SAAS,gBCAvBiC,MAjBf,WACE,OACE,sBAAKnC,UAAU,MAAf,UAGE,cAAC,EAAD,IAGA,cAAC,EAAD,IAIA,cAAC,EAAD,QCPSoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.744d0a87.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Header.css\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport IconButton from '@material-ui/core/IconButton';\n\nfunction Header() {\n    return (\n        <div className='header'>\n            <IconButton>\n                <PersonIcon fontSize=\"large\" className=\"header_icon\"/>\n            </IconButton>\n\n            <img className=\"header_logo\" src={process.env.PUBLIC_URL + '/tinder.png'} alt=\"tinder logo\"/>\n\n            <IconButton>\n                <ForumIcon fontSize=\"large\" className=\"hedaer_icon\"></ForumIcon>\n            </IconButton>\n            \n        </div>\n    )\n}\n\nexport default Header\n","import axios from \"axios\";\nconst instance = axios.create({\n    baseURL: 'http://127.0.0.1:8001',\n    timeout: 1000,\n    headers: {'X-Custom-Header': 'Tinder Clone'}\n  });\nexport default instance;\n ","import React,{useState,useEffect} from 'react'\nimport TinderCard from \"react-tinder-card\"\nimport \"./TinderCards.css\"\nimport axios from \"./axios\";\n\nfunction TinderCards() {\n    const [people,setPeople] = useState([]);\n\n    useEffect(()=>{\n         async function fetchData(){\n             const req = await axios.get(\"/tinder/cards\");\n             setPeople(req.data);\n         }\n         fetchData();\n    },[]);\n    console.log(people);\n\n    const swiped = (direction,nameToDelete) => {\n        //setLastDirection(direction);\n        console.log(\"removing \"+nameToDelete);\n    }\n\n    const outOfFrame = (name) => {\n        console.log( name + \" left the screen !\")\n    }\n\n    return (\n        \n        <div className=\"tinderCards\">\n            <div className=\"tinderCards_cardContainer\">\n                { people.map( (person) => \n                    <TinderCard\n                     className=\"swipe\"\n                     key={person.name}\n                     preventSwipe={[\"up\",\"down\"]}\n                     onSwipe={(dir) => swiped(dir,person.name)}\n                     onCardLeftScreen = {() => outOfFrame(person.name)}\n                    >\n                        <div style={{backgroundImage:`url(${person.imgUrl})`}} className=\"card\">\n                           <h3>{person.name}</h3>\n                        </div>\n                    </TinderCard>\n                )}\n            </div>\n        </div>\n    )}\nexport default TinderCards","import React from 'react'\nimport \"./SwipeButtons.css\"\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\"\nimport IconButton from \"@material-ui/core/IconButton\"\nfunction SwipeButtons() {\n    return (\n        <div className=\"swipeButtons\">\n            <IconButton className=\"swipeButtons_repeat\">\n                <ReplayIcon fontSize=\"large\"/>\n            </IconButton>\n            <IconButton className=\"swipeButtons_left\">\n                <CloseIcon fontSize=\"large\"/>\n            </IconButton>\n            <IconButton className=\"swipeButtons_star\">\n                <StarRateIcon fontSize=\"large\"/>\n            </IconButton>\n            <IconButton className=\"swipeButtons_right\">\n                <FavoriteIcon fontSize=\"large\"/>\n            </IconButton>\n            <IconButton className=\"swipeButtons_lightning\">\n                <FlashOnIcon fontSize=\"large\"/>\n            </IconButton>\n        </div>\n    )\n}\n\nexport default SwipeButtons","import React from \"react\"\nimport './App.css';\nimport \"./Header\"\nimport Header from \"./Header\";\nimport TinderCards from \"./TinderCards\";\nimport SwipeButtons from \"./SwipeButtons\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n\n      {/*** Header */}\n      <Header/>\n\n      {/*** Tender Cards */}\n      <TinderCards/>\n\n\n      {/*** Swipe Buttons */}\n      <SwipeButtons/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}